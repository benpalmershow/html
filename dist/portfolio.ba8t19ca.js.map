{
  "version": 3,
  "sources": ["../js/portfolio.js"],
  "sourcesContent": [
    "/**\n * Portfolio Manager Class\n * Handles loading and displaying portfolio data from JSON\n */\nclass PortfolioManager {\n    constructor() {\n        this.portfolioData = null;\n        this.currentSort = { column: null, direction: 'asc' };\n        this.initialize();\n    }\n\n    /**\n     * Initialize the portfolio manager\n     */\n    async initialize() {\n        try {\n            await this.loadPortfolioData();\n            this.renderPortfolioTable();\n            this.renderPortfolioSections();\n            this.setupEventListeners();\n            this.updateLastUpdated();\n            \n            // Initialize Lucide icons after content is loaded\n            if (window.lucide) {\n                lucide.createIcons();\n            }\n        } catch (error) {\n            console.error('Error initializing portfolio:', error);\n            this.showError('Failed to load portfolio data. Please try again later.');\n        }\n    }\n\n    /**\n     * Show error message to the user\n     */\n    showError(message) {\n        const errorDiv = document.createElement('div');\n        errorDiv.className = 'bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative';\n        errorDiv.role = 'alert';\n        errorDiv.innerHTML = `\n            <strong class=\"font-bold\">Error: </strong>\n            <span class=\"block sm:inline\">${message}</span>\n        `;\n        \n        const mainContent = document.querySelector('main');\n        if (mainContent) {\n            mainContent.prepend(errorDiv);\n        }\n    }\n\n    /**\n     * Load portfolio data from JSON file\n     */\n    async loadPortfolioData() {\n        try {\n            const response = await fetch('/json/portfolio.json');\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status}`);\n            }\n            this.portfolioData = await response.json();\n        } catch (error) {\n            console.error('Error loading portfolio data:', error);\n            throw error;\n        }\n    }\n    \n    /**\n     * Update the last updated timestamp\n     */\n    updateLastUpdated() {\n        if (this.portfolioData?.lastUpdated) {\n            const lastUpdatedEl = document.getElementById('last-updated');\n            if (lastUpdatedEl) {\n                const date = new Date(this.portfolioData.lastUpdated);\n                lastUpdatedEl.textContent = `Portfolio data last updated: ${date.toLocaleString()}`;\n            }\n        }\n    }\n\n    /**\n     * Render the portfolio table with data from JSON\n     */\n    renderPortfolioTable() {\n        if (!this.portfolioData?.portfolioComparison?.stocks?.length) return;\n        \n        const tableBody = document.querySelector('#portfolio-comparison-table tbody');\n        if (!tableBody) return;\n        \n        // Clear existing rows\n        tableBody.innerHTML = '';\n        \n        // Add rows for each stock\n        this.portfolioData.portfolioComparison.stocks.forEach(stock => {\n            const row = document.createElement('tr');\n            \n            // Add background color for highlighted stocks\n            row.classList.add(stock.highlight ? 'bg-blue-50' : 'bg-slate-50');\n            \n            const description = stock.description || {\n                title: stock.company,\n                short: '',\n                full: ''\n            };\n            \n            // Create ticker link\n            const tickerLink = `https://finance.yahoo.com/quote/${stock.ticker}`;\n            \n            row.innerHTML = `\n                <td class=\"px-3 py-2 whitespace-nowrap text-slate-700 overflow-hidden text-ellipsis\">\n                    <a href=\"${tickerLink}\" target=\"_blank\" class=\"hover:text-blue-600 hover:underline\">\n                        ${stock.company}\n                    </a>\n                </td>\n                <td class=\"px-3 py-2 whitespace-nowrap font-medium text-slate-900 overflow-hidden text-ellipsis\">\n                    ${stock.ticker}\n                </td>\n                <td class=\"px-3 py-2 whitespace-nowrap text-right font-medium text-slate-900\">\n                    ${stock.october || '-'}\n                </td>\n                <td class=\"px-3 py-2 whitespace-nowrap text-right text-slate-500\">\n                    ${stock.september || '-'}\n                </td>\n                <td class=\"px-3 py-2 whitespace-nowrap text-right text-slate-500\">\n                    ${stock.august || '-'}\n                </td>\n                <td class=\"px-3 py-2 text-slate-600 text-xs overflow-hidden w-[52%]\">\n                    <div class=\"truncate w-full group relative\">\n                        <span class=\"font-medium\">${description.title}</span> - ${description.short}\n                        ${description.full ? `\n                            <div class=\"hidden group-hover:block absolute z-10 w-96 p-3 mt-1 -ml-2 text-xs bg-white border border-slate-200 rounded shadow-lg\">\n                                <div class=\"font-semibold mb-1\">${description.title}</div>\n                                <div>${description.full}</div>\n                            </div>\n                        ` : ''}\n                    </div>\n                </td>\n            `;\n            \n            tableBody.appendChild(row);\n        });\n    }\n\n    /**\n     * Render portfolio sections from the data\n     */\n    renderPortfolioSections() {\n        if (!this.portfolioData?.portfolioSections?.length) return;\n        \n        const sectionsContainer = document.getElementById('portfolio-sections');\n        if (!sectionsContainer) return;\n        \n        this.portfolioData.portfolioSections.forEach(section => {\n            const sectionElement = this.createPortfolioSection(section);\n            if (sectionElement) {\n                sectionsContainer.appendChild(sectionElement);\n            }\n        });\n    }\n    \n    /**\n     * Create a portfolio section element\n     */\n    createPortfolioSection(section) {\n        if (!section?.id || !section.title || !section.holdings?.length) return null;\n        \n        const sectionElement = document.createElement('div');\n        sectionElement.className = 'bg-white rounded-lg shadow-sm border border-slate-200 mb-6';\n        \n        // Create section header\n        const header = document.createElement('div');\n        header.className = 'p-6 border-b border-slate-200';\n        header.innerHTML = `\n            <h2 class=\"flex items-center justify-between text-lg font-medium text-slate-800 cursor-pointer select-none hover:text-slate-600 transition-colors\" \n                data-toggle=\"collapse\" data-target=\"${section.id}-holdings-grid\">\n                <div class=\"flex items-center gap-3\">\n                    <i data-lucide=\"${section.icon || 'briefcase'}\" class=\"w-5 h-5 text-slate-500\"></i>\n                    <span>${section.title}</span>\n                </div>\n                <i data-lucide=\"chevron-down\" class=\"w-5 h-5 text-slate-400 transition-transform duration-200\"></i>\n            </h2>\n            ${section.subtitle ? `<p class=\"text-sm text-slate-500 mt-1\">${section.subtitle}</p>` : ''}\n        `;\n        \n        // Create holdings grid\n        const grid = document.createElement('div');\n        grid.id = `${section.id}-holdings-grid`;\n        grid.className = 'p-6';\n        grid.style.display = 'none'; // Start collapsed\n        \n        const gridInner = document.createElement('div');\n        gridInner.className = 'grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4';\n        \n        // Add holdings to grid\n        section.holdings.forEach(holding => {\n            const holdingElement = this.createHoldingCard(holding);\n            if (holdingElement) {\n                gridInner.appendChild(holdingElement);\n            }\n        });\n        \n        grid.appendChild(gridInner);\n        \n        sectionElement.appendChild(header);\n        sectionElement.appendChild(grid);\n        \n        return sectionElement;\n    }\n    \n    /**\n     * Create a holding card element\n     */\n    createHoldingCard(holding) {\n        if (!holding.ticker) return null;\n        \n        const card = document.createElement('div');\n        card.className = 'bg-slate-50 rounded-lg p-4 border border-slate-200 hover:shadow-sm hover:border-slate-300 transition-all duration-200';\n        \n        const tickerLink = `https://finance.yahoo.com/quote/${holding.ticker}`;\n        const allocation = holding.allocation ? `\n            <span class=\"bg-${holding.highlight ? 'blue' : 'slate'}-600 text-white px-2 py-1 rounded text-xs font-medium\">\n                ${holding.allocation}\n            </span>\n        ` : '';\n        \n        card.innerHTML = `\n            <div class=\"flex items-center justify-between mb-3 pb-2 border-b border-slate-200\">\n                <a href=\"${tickerLink}\" target=\"_blank\" class=\"text-base font-semibold text-slate-700 hover:text-blue-600 transition-colors no-underline\">\n                    ${holding.ticker}\n                </a>\n                ${allocation}\n            </div>\n            ${holding.company ? `\n                <div class=\"text-sm text-slate-600 mb-2\">\n                    <a href=\"${tickerLink}\" target=\"_blank\" class=\"hover:text-blue-600 hover:underline\">\n                        ${holding.company}\n                    </a>\n                </div>\n            ` : ''}\n            ${holding.description ? `\n                <div class=\"text-xs text-slate-500 mb-2 line-clamp-2\">\n                    ${holding.description}\n                </div>\n            ` : ''}\n            ${holding.notes ? `\n                <div class=\"mt-2 pt-2 border-t border-slate-100 text-xs text-slate-500\">\n                    <div class=\"font-medium text-slate-600\">Notes:</div>\n                    <div>${holding.notes}</div>\n                </div>\n            ` : ''}\n        `;\n        \n        return card;\n    }\n    \n    /**\n     * Set up event listeners for the portfolio page\n     */\n    setupEventListeners() {\n        // Add sort handlers to table headers\n        document.querySelectorAll('#portfolio-comparison-table th[data-sort]').forEach(th => {\n            const sortKey = th.getAttribute('data-sort');\n            if (sortKey) {\n                th.style.cursor = 'pointer';\n                th.addEventListener('click', () => this.sortTable(sortKey));\n            }\n        });\n\n        // Toggle collapsible sections\n        document.body.addEventListener('click', (e) => {\n            const toggleBtn = e.target.closest('[data-toggle=\"collapse\"]');\n            if (toggleBtn) {\n                const targetId = toggleBtn.getAttribute('data-target');\n                const target = document.getElementById(targetId);\n                const icon = toggleBtn.querySelector('i[data-lucide]');\n                \n                if (target) {\n                    const isExpanding = target.style.display === 'none';\n                    target.style.display = isExpanding ? 'block' : 'none';\n                    \n                    if (icon) {\n                        // Rotate the chevron icon\n                        icon.style.transform = isExpanding ? 'rotate(180deg)' : '';\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * Parse a percentage value from a string\n     * @param {string} value - The percentage value to parse (e.g., \"5%\" or \"-3.2%\")\n     * @returns {number} The parsed number or -Infinity for '-' values\n     */\n    parsePercentage(value) {\n        if (value === '-' || value === undefined) return -Infinity;\n        const num = parseFloat(value);\n        return isNaN(num) ? -Infinity : num;\n    }\n\n    /**\n     * Update the sort indicators in the table header\n     * @param {string} sortKey - The key of the column being sorted\n     * @param {string} direction - The sort direction ('asc' or 'desc')\n     */\n    updateSortIndicators(sortKey, direction) {\n        // Remove all sort indicators and reset header text\n        document.querySelectorAll('th[data-sort]').forEach(header => {\n            // Get the original text from the data-original-text attribute or the header's text content\n            const originalText = header.getAttribute('data-original-text') || header.textContent.trim();\n            header.textContent = originalText; // Reset to original text\n            header.setAttribute('data-original-text', originalText); // Ensure we have the original text saved\n        });\n\n        // Add sort indicator to current column\n        const header = document.querySelector(`th[data-sort=\"${sortKey}\"]`);\n        if (header) {\n            const originalText = header.getAttribute('data-original-text') || header.textContent.trim();\n            header.setAttribute('data-original-text', originalText);\n            header.innerHTML = `${originalText} <span class=\"ml-1\">${direction === 'asc' ? '↑' : '↓'}</span>`;\n        }\n    }\n\n    /**\n     * Sort the portfolio table by the specified column\n     * @param {string} sortKey - The key of the column to sort by\n     */\n    sortTable(sortKey) {\n        if (!this.portfolioData?.portfolioComparison?.stocks?.length) return;\n\n        // Toggle direction if sorting the same column\n        const direction = this.currentSort.column === sortKey && \n                         this.currentSort.direction === 'asc' ? 'desc' : 'asc';\n        \n        // Update the sort indicators\n        this.updateSortIndicators(sortKey, direction);\n        \n        // Define sort functions for different columns\n        const sortFunctions = {\n            company: (a, b) => a.company.localeCompare(b.company),\n            ticker: (a, b) => a.ticker.localeCompare(b.ticker),\n            october: (a, b) => this.parsePercentage(a.october) - this.parsePercentage(b.october),\n            september: (a, b) => this.parsePercentage(a.september) - this.parsePercentage(b.september),\n            august: (a, b) => this.parsePercentage(a.august) - this.parsePercentage(b.august)\n        };\n\n        // Get the appropriate sort function\n        const sortFunction = sortFunctions[sortKey];\n        if (!sortFunction) return;\n\n        // Sort the stocks\n        this.portfolioData.portfolioComparison.stocks.sort((a, b) => {\n            return direction === 'asc' ? sortFunction(a, b) : -sortFunction(a, b);\n        });\n        \n        // Update current sort state\n        this.currentSort = { column: sortKey, direction };\n        \n        // Re-render the table\n        this.renderPortfolioTable();\n    }\n}\n\n// Initialize when DOM is loaded\ndocument.addEventListener('DOMContentLoaded', () => {\n    // Initialize Lucide icons\n    if (typeof lucide !== 'undefined') {\n        lucide.createIcons();\n    }\n\n    // Initialize the portfolio manager\n    window.portfolio = new PortfolioManager();\n\n    // Helper function to toggle grid display\n    function toggleGrid(gridId) {\n        const grid = document.getElementById(gridId);\n        if (grid) {\n            grid.style.display = grid.style.display === 'none' ? 'block' : 'none';\n        }\n    }\n\n    // Expose functions to global scope for HTML onclick handlers\n    window.toggleGptPortfolio = () => toggleGrid('gpt-holdings-grid');\n    window.toggleSeptemberPortfolio = () => toggleGrid('september-holdings-grid');\n    window.toggleOctoberPortfolio = () => toggleGrid('october-holdings-grid');\n});\n"
  ],
  "mappings": "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",
  "debugId": "F76B6AEFA5DE795564756E2164756E21",
  "names": []
}